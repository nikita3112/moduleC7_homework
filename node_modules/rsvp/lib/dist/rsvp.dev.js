"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.on = on;
exports.off = off;
Object.defineProperty(exports, "Promise", {
  enumerable: true,
  get: function get() {
    return _promise["default"];
  }
});
Object.defineProperty(exports, "EventTarget", {
  enumerable: true,
  get: function get() {
    return _events["default"];
  }
});
Object.defineProperty(exports, "denodeify", {
  enumerable: true,
  get: function get() {
    return _node["default"];
  }
});
Object.defineProperty(exports, "all", {
  enumerable: true,
  get: function get() {
    return _all["default"];
  }
});
Object.defineProperty(exports, "allSettled", {
  enumerable: true,
  get: function get() {
    return _allSettled["default"];
  }
});
Object.defineProperty(exports, "race", {
  enumerable: true,
  get: function get() {
    return _race["default"];
  }
});
Object.defineProperty(exports, "hash", {
  enumerable: true,
  get: function get() {
    return _hash["default"];
  }
});
Object.defineProperty(exports, "hashSettled", {
  enumerable: true,
  get: function get() {
    return _hashSettled["default"];
  }
});
Object.defineProperty(exports, "rethrow", {
  enumerable: true,
  get: function get() {
    return _rethrow["default"];
  }
});
Object.defineProperty(exports, "defer", {
  enumerable: true,
  get: function get() {
    return _defer["default"];
  }
});
Object.defineProperty(exports, "configure", {
  enumerable: true,
  get: function get() {
    return _config.configure;
  }
});
Object.defineProperty(exports, "map", {
  enumerable: true,
  get: function get() {
    return _map["default"];
  }
});
Object.defineProperty(exports, "resolve", {
  enumerable: true,
  get: function get() {
    return _resolve["default"];
  }
});
Object.defineProperty(exports, "reject", {
  enumerable: true,
  get: function get() {
    return _reject["default"];
  }
});
Object.defineProperty(exports, "filter", {
  enumerable: true,
  get: function get() {
    return _filter["default"];
  }
});
Object.defineProperty(exports, "asap", {
  enumerable: true,
  get: function get() {
    return _asap["default"];
  }
});
exports.async = exports.cast = exports["default"] = void 0;

var _promise = _interopRequireDefault(require("./rsvp/promise"));

var _events = _interopRequireDefault(require("./rsvp/events"));

var _node = _interopRequireDefault(require("./rsvp/node"));

var _all = _interopRequireDefault(require("./rsvp/all"));

var _allSettled = _interopRequireDefault(require("./rsvp/all-settled"));

var _race = _interopRequireDefault(require("./rsvp/race"));

var _hash = _interopRequireDefault(require("./rsvp/hash"));

var _hashSettled = _interopRequireDefault(require("./rsvp/hash-settled"));

var _rethrow = _interopRequireDefault(require("./rsvp/rethrow"));

var _defer = _interopRequireDefault(require("./rsvp/defer"));

var _config = require("./rsvp/config");

var _map = _interopRequireDefault(require("./rsvp/map"));

var _resolve = _interopRequireDefault(require("./rsvp/resolve"));

var _reject = _interopRequireDefault(require("./rsvp/reject"));

var _filter = _interopRequireDefault(require("./rsvp/filter"));

var _asap = _interopRequireDefault(require("./rsvp/asap"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

// defaults
_config.config.async = _asap["default"];

_config.config.after = function (cb) {
  return setTimeout(cb, 0);
};

var cast = _resolve["default"];
exports.cast = cast;

var async = function async(callback, arg) {
  return _config.config.async(callback, arg);
};

exports.async = async;

function on() {
  _config.config.on.apply(_config.config, arguments);
}

function off() {
  _config.config.off.apply(_config.config, arguments);
} // Set up instrumentation through `window.__PROMISE_INTRUMENTATION__`


if (typeof window !== 'undefined' && _typeof(window['__PROMISE_INSTRUMENTATION__']) === 'object') {
  var callbacks = window['__PROMISE_INSTRUMENTATION__'];
  (0, _config.configure)('instrument', true);

  for (var eventName in callbacks) {
    if (callbacks.hasOwnProperty(eventName)) {
      on(eventName, callbacks[eventName]);
    }
  }
} // the default export here is for backwards compat:
//   https://github.com/tildeio/rsvp.js/issues/434


var _default = {
  asap: _asap["default"],
  cast: cast,
  Promise: _promise["default"],
  EventTarget: _events["default"],
  all: _all["default"],
  allSettled: _allSettled["default"],
  race: _race["default"],
  hash: _hash["default"],
  hashSettled: _hashSettled["default"],
  rethrow: _rethrow["default"],
  defer: _defer["default"],
  denodeify: _node["default"],
  configure: _config.configure,
  on: on,
  off: off,
  resolve: _resolve["default"],
  reject: _reject["default"],
  map: _map["default"],
  async: async,
  filter: _filter["default"]
};
exports["default"] = _default;