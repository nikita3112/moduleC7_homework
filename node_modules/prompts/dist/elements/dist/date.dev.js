'use strict';

function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread(); }

function _nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance"); }

function _iterableToArray(iter) { if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === "[object Arguments]") return Array.from(iter); }

function _arrayWithoutHoles(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _get(target, property, receiver) { if (typeof Reflect !== "undefined" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }

function _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {
  try {
    var info = gen[key](arg);
    var value = info.value;
  } catch (error) {
    reject(error);
    return;
  }

  if (info.done) {
    resolve(value);
  } else {
    Promise.resolve(value).then(_next, _throw);
  }
}

function _asyncToGenerator(fn) {
  return function () {
    var self = this,
        args = arguments;
    return new Promise(function (resolve, reject) {
      var gen = fn.apply(self, args);

      function _next(value) {
        asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value);
      }

      function _throw(err) {
        asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err);
      }

      _next(undefined);
    });
  };
}

var color = require('kleur');

var Prompt = require('./prompt');

var _require = require('../util'),
    style = _require.style,
    clear = _require.clear,
    figures = _require.figures;

var _require2 = require('sisteransi'),
    erase = _require2.erase,
    cursor = _require2.cursor;

var _require3 = require('../dateparts'),
    DatePart = _require3.DatePart,
    Meridiem = _require3.Meridiem,
    Day = _require3.Day,
    Hours = _require3.Hours,
    Milliseconds = _require3.Milliseconds,
    Minutes = _require3.Minutes,
    Month = _require3.Month,
    Seconds = _require3.Seconds,
    Year = _require3.Year;

var regex = /\\(.)|"((?:\\["\\]|[^"])+)"|(D[Do]?|d{3,4}|d)|(M{1,4})|(YY(?:YY)?)|([aA])|([Hh]{1,2})|(m{1,2})|(s{1,2})|(S{1,4})|./g;
var regexGroups = {
  1: function _(_ref) {
    var token = _ref.token;
    return token.replace(/\\(.)/g, '$1');
  },
  2: function _(opts) {
    return new Day(opts);
  },
  // Day // TODO
  3: function _(opts) {
    return new Month(opts);
  },
  // Month
  4: function _(opts) {
    return new Year(opts);
  },
  // Year
  5: function _(opts) {
    return new Meridiem(opts);
  },
  // AM/PM // TODO (special)
  6: function _(opts) {
    return new Hours(opts);
  },
  // Hours
  7: function _(opts) {
    return new Minutes(opts);
  },
  // Minutes
  8: function _(opts) {
    return new Seconds(opts);
  },
  // Seconds
  9: function _(opts) {
    return new Milliseconds(opts);
  } // Fractional seconds

};
var dfltLocales = {
  months: 'January,February,March,April,May,June,July,August,September,October,November,December'.split(','),
  monthsShort: 'Jan,Feb,Mar,Apr,May,Jun,Jul,Aug,Sep,Oct,Nov,Dec'.split(','),
  weekdays: 'Sunday,Monday,Tuesday,Wednesday,Thursday,Friday,Saturday'.split(','),
  weekdaysShort: 'Sun,Mon,Tue,Wed,Thu,Fri,Sat'.split(',')
};
/**
 * DatePrompt Base Element
 * @param {Object} opts Options
 * @param {String} opts.message Message
 * @param {Number} [opts.initial] Index of default value
 * @param {String} [opts.mask] The format mask
 * @param {object} [opts.locales] The date locales
 * @param {String} [opts.error] The error message shown on invalid value
 * @param {Function} [opts.validate] Function to validate the submitted value
 * @param {Stream} [opts.stdin] The Readable stream to listen to
 * @param {Stream} [opts.stdout] The Writable stream to write readline data to
 */

var DatePrompt =
/*#__PURE__*/
function (_Prompt) {
  _inherits(DatePrompt, _Prompt);

  function DatePrompt() {
    var _this3;

    var opts = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

    _classCallCheck(this, DatePrompt);

    _this3 = _possibleConstructorReturn(this, _getPrototypeOf(DatePrompt).call(this, opts));
    _this3.msg = opts.message;
    _this3.cursor = 0;
    _this3.typed = '';
    _this3.locales = Object.assign(dfltLocales, opts.locales);
    _this3._date = opts.initial || new Date();
    _this3.errorMsg = opts.error || 'Please Enter A Valid Value';

    _this3.validator = opts.validate || function () {
      return true;
    };

    _this3.mask = opts.mask || 'YYYY-MM-DD HH:mm:ss';
    _this3.clear = clear('', _this3.out.columns);

    _this3.render();

    return _this3;
  }

  _createClass(DatePrompt, [{
    key: "moveCursor",
    value: function moveCursor(n) {
      this.typed = '';
      this.cursor = n;
      this.fire();
    }
  }, {
    key: "reset",
    value: function reset() {
      this.moveCursor(this.parts.findIndex(function (p) {
        return p instanceof DatePart;
      }));
      this.fire();
      this.render();
    }
  }, {
    key: "exit",
    value: function exit() {
      this.abort();
    }
  }, {
    key: "abort",
    value: function abort() {
      this.done = this.aborted = true;
      this.error = false;
      this.fire();
      this.render();
      this.out.write('\n');
      this.close();
    }
  }, {
    key: "validate",
    value: function validate() {
      var _this = this;

      return _asyncToGenerator(
      /*#__PURE__*/
      regeneratorRuntime.mark(function _callee() {
        var valid;
        return regeneratorRuntime.wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                _context.next = 2;
                return _this.validator(_this.value);

              case 2:
                valid = _context.sent;

                if (typeof valid === 'string') {
                  _this.errorMsg = valid;
                  valid = false;
                }

                _this.error = !valid;

              case 5:
              case "end":
                return _context.stop();
            }
          }
        }, _callee);
      }))();
    }
  }, {
    key: "submit",
    value: function submit() {
      var _this2 = this;

      return _asyncToGenerator(
      /*#__PURE__*/
      regeneratorRuntime.mark(function _callee2() {
        return regeneratorRuntime.wrap(function _callee2$(_context2) {
          while (1) {
            switch (_context2.prev = _context2.next) {
              case 0:
                _context2.next = 2;
                return _this2.validate();

              case 2:
                if (!_this2.error) {
                  _context2.next = 7;
                  break;
                }

                _this2.color = 'red';

                _this2.fire();

                _this2.render();

                return _context2.abrupt("return");

              case 7:
                _this2.done = true;
                _this2.aborted = false;

                _this2.fire();

                _this2.render();

                _this2.out.write('\n');

                _this2.close();

              case 13:
              case "end":
                return _context2.stop();
            }
          }
        }, _callee2);
      }))();
    }
  }, {
    key: "up",
    value: function up() {
      this.typed = '';
      this.parts[this.cursor].up();
      this.render();
    }
  }, {
    key: "down",
    value: function down() {
      this.typed = '';
      this.parts[this.cursor].down();
      this.render();
    }
  }, {
    key: "left",
    value: function left() {
      var prev = this.parts[this.cursor].prev();
      if (prev == null) return this.bell();
      this.moveCursor(this.parts.indexOf(prev));
      this.render();
    }
  }, {
    key: "right",
    value: function right() {
      var next = this.parts[this.cursor].next();
      if (next == null) return this.bell();
      this.moveCursor(this.parts.indexOf(next));
      this.render();
    }
  }, {
    key: "next",
    value: function next() {
      var next = this.parts[this.cursor].next();
      this.moveCursor(next ? this.parts.indexOf(next) : this.parts.findIndex(function (part) {
        return part instanceof DatePart;
      }));
      this.render();
    }
  }, {
    key: "_",
    value: function _(c) {
      if (/\d/.test(c)) {
        this.typed += c;
        this.parts[this.cursor].setTo(this.typed);
        this.render();
      }
    }
  }, {
    key: "render",
    value: function render() {
      var _this4 = this;

      if (this.closed) return;
      if (this.firstRender) this.out.write(cursor.hide);else this.out.write(clear(this.outputText, this.out.columns));

      _get(_getPrototypeOf(DatePrompt.prototype), "render", this).call(this); // Print prompt


      this.outputText = [style.symbol(this.done, this.aborted), color.bold(this.msg), style.delimiter(false), this.parts.reduce(function (arr, p, idx) {
        return arr.concat(idx === _this4.cursor && !_this4.done ? color.cyan().underline(p.toString()) : p);
      }, []).join('')].join(' '); // Print error

      if (this.error) {
        this.outputText += this.errorMsg.split('\n').reduce(function (a, l, i) {
          return a + "\n".concat(i ? " " : figures.pointerSmall, " ").concat(color.red().italic(l));
        }, "");
      }

      this.out.write(erase.line + cursor.to(0) + this.outputText);
    }
  }, {
    key: "value",
    get: function get() {
      return this.date;
    }
  }, {
    key: "date",
    get: function get() {
      return this._date;
    },
    set: function set(date) {
      if (date) this._date.setTime(date.getTime());
    }
  }, {
    key: "mask",
    set: function set(mask) {
      var _this$parts;

      var result;
      this.parts = [];

      while (result = regex.exec(mask)) {
        var match = result.shift();
        var idx = result.findIndex(function (gr) {
          return gr != null;
        });
        this.parts.push(idx in regexGroups ? regexGroups[idx]({
          token: result[idx] || match,
          date: this.date,
          parts: this.parts,
          locales: this.locales
        }) : result[idx] || match);
      }

      var parts = this.parts.reduce(function (arr, i) {
        if (typeof i === 'string' && typeof arr[arr.length - 1] === 'string') arr[arr.length - 1] += i;else arr.push(i);
        return arr;
      }, []);
      this.parts.splice(0);

      (_this$parts = this.parts).push.apply(_this$parts, _toConsumableArray(parts));

      this.reset();
    }
  }]);

  return DatePrompt;
}(Prompt);

module.exports = DatePrompt;