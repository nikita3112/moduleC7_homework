"use strict";

var conversions = require("webidl-conversions");

var utils = require("./utils.js");

exports.convert = function (value) {
  var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},
      _ref$context = _ref.context,
      context = _ref$context === void 0 ? "The provided value" : _ref$context;

  if (typeof value !== "function") {
    throw new TypeError(context + " is not a function");
  }

  function invokeTheCallbackFunction() {
    if ((this instanceof invokeTheCallbackFunction ? this.constructor : void 0) !== undefined) {
      throw new Error("Internal error: invokeTheCallbackFunction is not a constructor");
    }

    var thisArg = utils.tryWrapperForImpl(this);
    var callResult;
    callResult = Reflect.apply(value, thisArg, []);
  }

  invokeTheCallbackFunction.construct = function () {
    var callResult = Reflect.construct(value, []);
  };

  invokeTheCallbackFunction[utils.wrapperSymbol] = value;
  invokeTheCallbackFunction.objectReference = value;
  return invokeTheCallbackFunction;
};