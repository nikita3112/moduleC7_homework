'use strict';

Object.defineProperty(exports, '__esModule', {
  value: true
});
exports["default"] = void 0;

function _types() {
  var data = require('../types');

  _types = function _types() {
    return data;
  };

  return data;
}
/**
 * Copyright (c) Facebook, Inc. and its affiliates. All Rights Reserved.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */


var isWorkerThread = function isWorkerThread() {
  try {
    // `Require` here to support Node v10
    var _require = require('worker_threads'),
        isMainThread = _require.isMainThread,
        parentPort = _require.parentPort;

    return !isMainThread && parentPort;
  } catch (_unused) {
    return false;
  }
};

var messageParent = function messageParent(message) {
  var parentProcess = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : process;

  try {
    if (isWorkerThread()) {
      // `Require` here to support Node v10
      var _require2 = require('worker_threads'),
          parentPort = _require2.parentPort;

      parentPort.postMessage([_types().PARENT_MESSAGE_CUSTOM, message]);
    } else if (typeof parentProcess.send === 'function') {
      parentProcess.send([_types().PARENT_MESSAGE_CUSTOM, message]);
    }
  } catch (_unused2) {
    throw new Error('"messageParent" can only be used inside a worker');
  }
};

var _default = messageParent;
exports["default"] = _default;