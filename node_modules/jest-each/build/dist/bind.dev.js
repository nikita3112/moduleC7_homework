'use strict';

function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread(); }

function _nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance"); }

function _iterableToArray(iter) { if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === "[object Arguments]") return Array.from(iter); }

function _arrayWithoutHoles(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } }

Object.defineProperty(exports, '__esModule', {
  value: true
});
exports["default"] = void 0;

function _jestUtil() {
  var data = require('jest-util');

  _jestUtil = function _jestUtil() {
    return data;
  };

  return data;
}

var _array = _interopRequireDefault(require('./table/array'));

var _template = _interopRequireDefault(require('./table/template'));

var _validation = require('./validation');

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : {
    "default": obj
  };
}
/**
 * Copyright (c) Facebook, Inc. and its affiliates. All Rights Reserved.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 */


var _default = function _default(cb) {
  var supportsDone = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;
  return function (table) {
    for (var _len = arguments.length, taggedTemplateData = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
      taggedTemplateData[_key - 1] = arguments[_key];
    }

    return function eachBind(title, test, timeout) {
      try {
        var tests = isArrayTable(taggedTemplateData) ? buildArrayTests(title, table) : buildTemplateTests(title, table, taggedTemplateData);
        return tests.forEach(function (row) {
          return cb(row.title, applyArguments(supportsDone, row.arguments, test), timeout);
        });
      } catch (e) {
        var error = new (_jestUtil().ErrorWithStack)(e.message, eachBind);
        return cb(title, function () {
          throw error;
        });
      }
    };
  };
};

exports["default"] = _default;

var isArrayTable = function isArrayTable(data) {
  return data.length === 0;
};

var buildArrayTests = function buildArrayTests(title, table) {
  (0, _validation.validateArrayTable)(table);
  return (0, _array["default"])(title, table);
};

var buildTemplateTests = function buildTemplateTests(title, table, taggedTemplateData) {
  var headings = getHeadingKeys(table[0]);
  (0, _validation.validateTemplateTableHeadings)(headings, taggedTemplateData);
  return (0, _template["default"])(title, headings, taggedTemplateData);
};

var getHeadingKeys = function getHeadingKeys(headings) {
  return headings.replace(/\s/g, '').split('|');
};

var applyArguments = function applyArguments(supportsDone, params, test) {
  return supportsDone && params.length < test.length ? function (done) {
    return test.apply(void 0, _toConsumableArray(params).concat([done]));
  } : function () {
    return test.apply(void 0, _toConsumableArray(params));
  };
};