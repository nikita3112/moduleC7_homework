"use strict";

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

var idlUtils = require("../generated/utils");

exports.implementation =
/*#__PURE__*/
function () {
  function PluginArray() {
    _classCallCheck(this, PluginArray);
  }

  _createClass(PluginArray, [{
    key: "refresh",
    value: function refresh() {}
  }, {
    key: "item",
    value: function item() {
      return null;
    }
  }, {
    key: "namedItem",
    value: function namedItem() {
      return null;
    }
  }, {
    key: "length",
    get: function get() {
      return 0;
    }
  }, {
    key: idlUtils.supportedPropertyIndices,
    get: function get() {
      return [];
    }
  }, {
    key: idlUtils.supportedPropertyNames,
    get: function get() {
      return [];
    }
  }]);

  return PluginArray;
}();