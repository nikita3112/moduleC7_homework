"use strict";

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

var PluginArray = require("../generated/PluginArray");

var MimeTypeArray = require("../generated/MimeTypeArray");

exports.implementation =
/*#__PURE__*/
function () {
  function NavigatorPluginsImpl() {
    _classCallCheck(this, NavigatorPluginsImpl);
  }

  _createClass(NavigatorPluginsImpl, [{
    key: "javaEnabled",
    value: function javaEnabled() {
      return false;
    }
  }, {
    key: "plugins",
    get: function get() {
      return PluginArray.create(this._globalObject);
    }
  }, {
    key: "mimeTypes",
    get: function get() {
      return MimeTypeArray.create(this._globalObject);
    }
  }]);

  return NavigatorPluginsImpl;
}();