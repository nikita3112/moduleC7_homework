"use strict";

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

var serialize = require("w3c-xmlserializer");

var DOMException = require("domexception/webidl2js-wrapper");

var utils = require("../generated/utils");

exports.implementation =
/*#__PURE__*/
function () {
  function XMLSerializerImpl(globalObject) {
    _classCallCheck(this, XMLSerializerImpl);

    this._globalObject = globalObject;
  }

  _createClass(XMLSerializerImpl, [{
    key: "serializeToString",
    value: function serializeToString(root) {
      try {
        return serialize(utils.wrapperForImpl(root), {
          requireWellFormed: false
        });
      } catch (e) {
        throw DOMException.create(this._globalObject, [e.message, "InvalidStateError"]);
      }
    }
  }]);

  return XMLSerializerImpl;
}();