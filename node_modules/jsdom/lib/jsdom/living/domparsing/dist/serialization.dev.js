"use strict";

var produceXMLSerialization = require("w3c-xmlserializer");

var parse5 = require("parse5");

var DOMException = require("domexception/webidl2js-wrapper");

var utils = require("../generated/utils");

var treeAdapter = require("./parse5-adapter-serialization");

var NODE_TYPE = require("../node-type");

var NAMESPACES = require("../helpers/namespaces");

function htmlSerialization(node) {
  if (node.nodeType === NODE_TYPE.ELEMENT_NODE && node.namespaceURI === NAMESPACES.HTML_NS && node.tagName === "TEMPLATE") {
    node = node.content;
  }

  return parse5.serialize(node, {
    treeAdapter: treeAdapter
  });
}

module.exports.fragmentSerialization = function (node, _ref) {
  var requireWellFormed = _ref.requireWellFormed,
      globalObject = _ref.globalObject;
  var contextDocument = node.nodeType === NODE_TYPE.DOCUMENT_NODE ? node : node._ownerDocument;

  if (contextDocument._parsingMode === "html") {
    return htmlSerialization(node);
  }

  var childNodes = node.childNodesForSerializing || node.childNodes;

  try {
    var serialized = "";

    for (var i = 0; i < childNodes.length; ++i) {
      serialized += produceXMLSerialization(utils.wrapperForImpl(childNodes[i] || childNodes.item(i)), {
        requireWellFormed: requireWellFormed
      });
    }

    return serialized;
  } catch (e) {
    throw DOMException.create(globalObject, [e.message, "InvalidStateError"]);
  }
};