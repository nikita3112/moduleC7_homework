"use strict";

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

var idlUtils = require("../generated/utils.js");

exports.implementation =
/*#__PURE__*/
function () {
  function StyleSheetList() {
    _classCallCheck(this, StyleSheetList);

    this._list = [];
  }

  _createClass(StyleSheetList, [{
    key: "item",
    value: function item(index) {
      var result = this._list[index];
      return result !== undefined ? result : null;
    }
  }, {
    key: "_add",
    value: function _add(sheet) {
      var _list = this._list;

      if (!_list.includes(sheet)) {
        _list.push(sheet);
      }
    }
  }, {
    key: "_remove",
    value: function _remove(sheet) {
      var _list = this._list;

      var index = _list.indexOf(sheet);

      if (index >= 0) {
        _list.splice(index, 1);
      }
    }
  }, {
    key: "length",
    get: function get() {
      return this._list.length;
    }
  }, {
    key: idlUtils.supportedPropertyIndices,
    get: function get() {
      return this._list.keys();
    }
  }]);

  return StyleSheetList;
}();