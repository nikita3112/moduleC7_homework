"use strict";
/* eslint-disable no-process-exit */

var util = require("util");

var _require = require("../../../.."),
    JSDOM = _require.JSDOM;

var _require2 = require("./xhr-utils"),
    READY_STATES = _require2.READY_STATES;

var idlUtils = require("../generated/utils");

var tough = require("tough-cookie");

var dom = new JSDOM();
var xhr = new dom.window.XMLHttpRequest();
var xhrImpl = idlUtils.implForWrapper(xhr);
var chunks = [];
process.stdin.on("data", function (chunk) {
  chunks.push(chunk);
});
process.stdin.on("end", function () {
  var buffer = Buffer.concat(chunks);
  var flag = JSON.parse(buffer.toString());

  if (flag.body && flag.body.type === "Buffer" && flag.body.data) {
    flag.body = Buffer.from(flag.body.data);
  }

  if (flag.cookieJar) {
    flag.cookieJar = tough.CookieJar.fromJSON(flag.cookieJar);
  }

  flag.synchronous = false;
  Object.assign(xhrImpl.flag, flag);
  var properties = xhrImpl.properties;
  xhrImpl.readyState = READY_STATES.OPENED;

  try {
    xhr.addEventListener("loadend", function () {
      if (properties.error) {
        properties.error = properties.error.stack || util.inspect(properties.error);
      }

      process.stdout.write(JSON.stringify({
        responseURL: xhrImpl.responseURL,
        status: xhrImpl.status,
        statusText: xhrImpl.statusText,
        properties: properties
      }), function () {
        process.exit(0);
      });
    }, false);
    xhr.send(flag.body);
  } catch (error) {
    properties.error += error.stack || util.inspect(error);
    process.stdout.write(JSON.stringify({
      responseURL: xhrImpl.responseURL,
      status: xhrImpl.status,
      statusText: xhrImpl.statusText,
      properties: properties
    }), function () {
      process.exit(0);
    });
  }
});