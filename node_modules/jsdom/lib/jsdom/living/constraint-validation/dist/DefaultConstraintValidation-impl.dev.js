"use strict";

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

var ValidityState = require("../generated/ValidityState");

var _require = require("../helpers/form-controls"),
    isDisabled = _require.isDisabled;

var _require2 = require("../helpers/traversal"),
    closest = _require2.closest;

var _require3 = require("../helpers/events"),
    fireAnEvent = _require3.fireAnEvent;

exports.implementation =
/*#__PURE__*/
function () {
  function DefaultConstraintValidationImpl() {
    _classCallCheck(this, DefaultConstraintValidationImpl);
  }

  _createClass(DefaultConstraintValidationImpl, [{
    key: "checkValidity",
    // https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#dom-cva-checkvalidity
    value: function checkValidity() {
      if (!this._isCandidateForConstraintValidation()) {
        return true;
      }

      if (this._satisfiesConstraints()) {
        return true;
      }

      fireAnEvent("invalid", this, undefined, {
        cancelable: true
      });
      return false;
    } // https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#dom-cva-setcustomvalidity

  }, {
    key: "setCustomValidity",
    value: function setCustomValidity(message) {
      this._customValidityErrorMessage = message;
    } // https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#dom-cva-reportvalidity
    // Since jsdom has no user interaction, it's the same as #checkValidity

  }, {
    key: "reportValidity",
    value: function reportValidity() {
      return this.checkValidity();
    } // https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#dom-cva-validationmessage

  }, {
    key: "_isCandidateForConstraintValidation",
    value: function _isCandidateForConstraintValidation() {
      // https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#attr-fe-disabled
      return !isDisabled(this) && // If an element has a datalist element ancestor,
      // it is barred from constraint validation.
      closest(this, "datalist") === null && !this._barredFromConstraintValidationSpecialization();
    }
  }, {
    key: "_isBarredFromConstraintValidation",
    value: function _isBarredFromConstraintValidation() {
      return !this._isCandidateForConstraintValidation();
    }
  }, {
    key: "_satisfiesConstraints",
    value: function _satisfiesConstraints() {
      return this.validity.valid;
    }
  }, {
    key: "willValidate",
    // https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#dom-cva-willvalidate
    get: function get() {
      return this._isCandidateForConstraintValidation();
    }
  }, {
    key: "validity",
    get: function get() {
      if (!this._validity) {
        this._validity = ValidityState.createImpl(this._globalObject, [], {
          element: this
        });
      }

      return this._validity;
    }
  }, {
    key: "validationMessage",
    get: function get() {
      var validity = this.validity;

      if (!this._isCandidateForConstraintValidation() || this._satisfiesConstraints()) {
        return "";
      }

      var isSufferingFromCustomError = validity.customError;

      if (isSufferingFromCustomError) {
        return this._customValidityErrorMessage;
      }

      return "Constraints not satisfied";
    }
  }]);

  return DefaultConstraintValidationImpl;
}();