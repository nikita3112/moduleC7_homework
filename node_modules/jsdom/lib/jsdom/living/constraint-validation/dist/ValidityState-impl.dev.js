"use strict";

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

exports.implementation =
/*#__PURE__*/
function () {
  function ValidityStateImpl(globalObject, args, privateData) {
    _classCallCheck(this, ValidityStateImpl);

    var element = privateData.element,
        _privateData$state = privateData.state,
        state = _privateData$state === void 0 ? {} : _privateData$state;
    this._element = element;
    this._state = state;
  }

  _createClass(ValidityStateImpl, [{
    key: "_failsConstraint",
    value: function _failsConstraint(method) {
      var validationMethod = this._state[method];

      if (validationMethod) {
        return validationMethod();
      }

      return false;
    }
  }, {
    key: "badInput",
    get: function get() {
      return this._failsConstraint("badInput");
    } // https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#suffering-from-a-custom-error

  }, {
    key: "customError",
    get: function get() {
      return this._element._customValidityErrorMessage !== "";
    }
  }, {
    key: "patternMismatch",
    get: function get() {
      return this._failsConstraint("patternMismatch");
    }
  }, {
    key: "rangeOverflow",
    get: function get() {
      return this._failsConstraint("rangeOverflow");
    }
  }, {
    key: "rangeUnderflow",
    get: function get() {
      return this._failsConstraint("rangeUnderflow");
    }
  }, {
    key: "stepMismatch",
    get: function get() {
      return this._failsConstraint("stepMismatch");
    }
  }, {
    key: "tooLong",
    get: function get() {
      return this._failsConstraint("tooLong");
    }
  }, {
    key: "tooShort",
    get: function get() {
      return this._failsConstraint("tooShort");
    }
  }, {
    key: "typeMismatch",
    get: function get() {
      return this._failsConstraint("typeMismatch");
    }
  }, {
    key: "valueMissing",
    get: function get() {
      return this._failsConstraint("valueMissing");
    }
  }, {
    key: "valid",
    get: function get() {
      return !(this.badInput || this.valueMissing || this.customError || this.patternMismatch || this.rangeOverflow || this.rangeUnderflow || this.stepMismatch || this.tooLong || this.tooShort || this.typeMismatch);
    }
  }]);

  return ValidityStateImpl;
}();