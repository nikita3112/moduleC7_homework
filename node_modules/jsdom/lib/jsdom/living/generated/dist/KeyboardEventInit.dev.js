"use strict";

function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

var conversions = require("webidl-conversions");

var utils = require("./utils.js");

var EventModifierInit = require("./EventModifierInit.js");

exports._convertInherit = function (obj, ret) {
  var _ref = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {},
      _ref$context = _ref.context,
      context = _ref$context === void 0 ? "The provided value" : _ref$context;

  EventModifierInit._convertInherit(obj, ret, {
    context: context
  });

  {
    var key = "charCode";
    var value = obj === undefined || obj === null ? undefined : obj[key];

    if (value !== undefined) {
      value = conversions["unsigned long"](value, {
        context: context + " has member 'charCode' that"
      });
      ret[key] = value;
    } else {
      ret[key] = 0;
    }
  }
  {
    var _key = "code";

    var _value = obj === undefined || obj === null ? undefined : obj[_key];

    if (_value !== undefined) {
      _value = conversions["DOMString"](_value, {
        context: context + " has member 'code' that"
      });
      ret[_key] = _value;
    } else {
      ret[_key] = "";
    }
  }
  {
    var _key2 = "isComposing";

    var _value2 = obj === undefined || obj === null ? undefined : obj[_key2];

    if (_value2 !== undefined) {
      _value2 = conversions["boolean"](_value2, {
        context: context + " has member 'isComposing' that"
      });
      ret[_key2] = _value2;
    } else {
      ret[_key2] = false;
    }
  }
  {
    var _key3 = "key";

    var _value3 = obj === undefined || obj === null ? undefined : obj[_key3];

    if (_value3 !== undefined) {
      _value3 = conversions["DOMString"](_value3, {
        context: context + " has member 'key' that"
      });
      ret[_key3] = _value3;
    } else {
      ret[_key3] = "";
    }
  }
  {
    var _key4 = "keyCode";

    var _value4 = obj === undefined || obj === null ? undefined : obj[_key4];

    if (_value4 !== undefined) {
      _value4 = conversions["unsigned long"](_value4, {
        context: context + " has member 'keyCode' that"
      });
      ret[_key4] = _value4;
    } else {
      ret[_key4] = 0;
    }
  }
  {
    var _key5 = "location";

    var _value5 = obj === undefined || obj === null ? undefined : obj[_key5];

    if (_value5 !== undefined) {
      _value5 = conversions["unsigned long"](_value5, {
        context: context + " has member 'location' that"
      });
      ret[_key5] = _value5;
    } else {
      ret[_key5] = 0;
    }
  }
  {
    var _key6 = "repeat";

    var _value6 = obj === undefined || obj === null ? undefined : obj[_key6];

    if (_value6 !== undefined) {
      _value6 = conversions["boolean"](_value6, {
        context: context + " has member 'repeat' that"
      });
      ret[_key6] = _value6;
    } else {
      ret[_key6] = false;
    }
  }
};

exports.convert = function convert(obj) {
  var _ref2 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},
      _ref2$context = _ref2.context,
      context = _ref2$context === void 0 ? "The provided value" : _ref2$context;

  if (obj !== undefined && _typeof(obj) !== "object" && typeof obj !== "function") {
    throw new TypeError("".concat(context, " is not an object."));
  }

  var ret = Object.create(null);

  exports._convertInherit(obj, ret, {
    context: context
  });

  return ret;
};