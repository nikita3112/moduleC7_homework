'use strict';

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

Object.defineProperty(exports, '__esModule', {
  value: true
});
exports["default"] = void 0;

function _ansiEscapes() {
  var data = _interopRequireDefault(require('ansi-escapes'));

  _ansiEscapes = function _ansiEscapes() {
    return data;
  };

  return data;
}

function _chalk() {
  var data = _interopRequireDefault(require('chalk'));

  _chalk = function _chalk() {
    return data;
  };

  return data;
}

function _jestUtil() {
  var data = require('jest-util');

  _jestUtil = function _jestUtil() {
    return data;
  };

  return data;
}

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : {
    "default": obj
  };
}

function _defineProperty(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }

  return obj;
}

var CLEAR = _jestUtil().specialChars.CLEAR;

var usage = function usage(entity) {
  return "\n".concat(_chalk()["default"].bold('Pattern Mode Usage'), "\n") + " ".concat(_chalk()["default"].dim("\u203A Press"), " Esc ").concat(_chalk()["default"].dim('to exit pattern mode.'), "\n") + " ".concat(_chalk()["default"].dim("\u203A Press"), " Enter ") + "".concat(_chalk()["default"].dim("to filter by a ".concat(entity, " regex pattern.")), "\n") + "\n";
};

var usageRows = usage('').split('\n').length;

var PatternPrompt =
/*#__PURE__*/
function () {
  function PatternPrompt(pipe, prompt) {
    _classCallCheck(this, PatternPrompt);

    _defineProperty(this, '_pipe', void 0);

    _defineProperty(this, '_prompt', void 0);

    _defineProperty(this, '_entityName', void 0);

    _defineProperty(this, '_currentUsageRows', void 0); // TODO: Should come in the constructor


    this._entityName = '';
    this._pipe = pipe;
    this._prompt = prompt;
    this._currentUsageRows = usageRows;
  }

  _createClass(PatternPrompt, [{
    key: "run",
    value: function run(onSuccess, onCancel, options) {
      this._pipe.write(_ansiEscapes()["default"].cursorHide);

      this._pipe.write(CLEAR);

      if (options && options.header) {
        this._pipe.write(options.header + '\n');

        this._currentUsageRows = usageRows + options.header.split('\n').length;
      } else {
        this._currentUsageRows = usageRows;
      }

      this._pipe.write(usage(this._entityName));

      this._pipe.write(_ansiEscapes()["default"].cursorShow);

      this._prompt.enter(this._onChange.bind(this), onSuccess, onCancel);
    }
  }, {
    key: "_onChange",
    value: function _onChange(_pattern, _options) {
      this._pipe.write(_ansiEscapes()["default"].eraseLine);

      this._pipe.write(_ansiEscapes()["default"].cursorLeft);
    }
  }]);

  return PatternPrompt;
}();

exports["default"] = PatternPrompt;