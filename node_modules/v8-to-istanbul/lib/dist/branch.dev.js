"use strict";

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

module.exports =
/*#__PURE__*/
function () {
  function CovBranch(startLine, startCol, endLine, endCol, count) {
    _classCallCheck(this, CovBranch);

    this.startLine = startLine;
    this.startCol = startCol;
    this.endLine = endLine;
    this.endCol = endCol;
    this.count = count;
  }

  _createClass(CovBranch, [{
    key: "toIstanbul",
    value: function toIstanbul() {
      var location = {
        start: {
          line: this.startLine,
          column: this.startCol
        },
        end: {
          line: this.endLine,
          column: this.endCol
        }
      };
      return {
        type: 'branch',
        line: this.startLine,
        loc: location,
        locations: [Object.assign({}, location)]
      };
    }
  }]);

  return CovBranch;
}();