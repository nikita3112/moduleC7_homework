'use strict';

Object.defineProperty(exports, '__esModule', {
  value: true
});
exports.getValues = getValues;
exports.validationCondition = validationCondition;
exports.multipleValidOptions = multipleValidOptions;
/**
 * Copyright (c) Facebook, Inc. and its affiliates. All Rights Reserved.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */

var toString = Object.prototype.toString;
var MULTIPLE_VALID_OPTIONS_SYMBOL = Symbol('JEST_MULTIPLE_VALID_OPTIONS');

function validationConditionSingle(option, validOption) {
  return option === null || option === undefined || typeof option === 'function' && typeof validOption === 'function' || toString.call(option) === toString.call(validOption);
}

function getValues(validOption) {
  if (Array.isArray(validOption) && // @ts-expect-error
  validOption[MULTIPLE_VALID_OPTIONS_SYMBOL]) {
    return validOption;
  }

  return [validOption];
}

function validationCondition(option, validOption) {
  return getValues(validOption).some(function (e) {
    return validationConditionSingle(option, e);
  });
}

function multipleValidOptions() {
  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
    args[_key] = arguments[_key];
  }

  var options = [].concat(args); // @ts-expect-error

  options[MULTIPLE_VALID_OPTIONS_SYMBOL] = true;
  return options;
}