'use strict';

Object.defineProperty(exports, '__esModule', {
  value: true
});
exports.errorMessage = void 0;

function _chalk() {
  var data = _interopRequireDefault(require('chalk'));

  _chalk = function _chalk() {
    return data;
  };

  return data;
}

function _jestGetType() {
  var data = _interopRequireDefault(require('jest-get-type'));

  _jestGetType = function _jestGetType() {
    return data;
  };

  return data;
}

var _condition = require('./condition');

var _utils = require('./utils');

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : {
    "default": obj
  };
}
/**
 * Copyright (c) Facebook, Inc. and its affiliates. All Rights Reserved.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */


var errorMessage = function errorMessage(option, received, defaultValue, options, path) {
  var conditions = (0, _condition.getValues)(defaultValue);
  var validTypes = Array.from(new Set(conditions.map(_jestGetType()["default"])));
  var message = "  Option ".concat(_chalk()["default"].bold("\"".concat(path && path.length > 0 ? path.join('.') + '.' : '').concat(option, "\"")), " must be of type:\n    ").concat(validTypes.map(function (e) {
    return _chalk()["default"].bold.green(e);
  }).join(' or '), "\n  but instead received:\n    ").concat(_chalk()["default"].bold.red((0, _jestGetType()["default"])(received)), "\n\n  Example:\n").concat(formatExamples(option, conditions));
  var comment = options.comment;
  var name = options.title && options.title.error || _utils.ERROR;
  throw new _utils.ValidationError(name, message, comment);
};

exports.errorMessage = errorMessage;

function formatExamples(option, examples) {
  return examples.map(function (e) {
    return "  {\n    ".concat(_chalk()["default"].bold("\"".concat(option, "\"")), ": ").concat(_chalk()["default"].bold((0, _utils.formatPrettyObject)(e)), "\n  }");
  }).join("\n\n  or\n\n");
}