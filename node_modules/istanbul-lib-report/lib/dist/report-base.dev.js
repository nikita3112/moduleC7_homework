'use strict'; // TODO: switch to class private field when targetting node.js 12

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

var _summarizer = Symbol('ReportBase.#summarizer');

var ReportBase =
/*#__PURE__*/
function () {
  function ReportBase() {
    var opts = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

    _classCallCheck(this, ReportBase);

    this[_summarizer] = opts.summarizer;
  }

  _createClass(ReportBase, [{
    key: "execute",
    value: function execute(context) {
      context.getTree(this[_summarizer]).visit(this, context);
    }
  }]);

  return ReportBase;
}();

module.exports = ReportBase;