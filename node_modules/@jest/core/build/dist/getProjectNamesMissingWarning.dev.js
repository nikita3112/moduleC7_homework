'use strict';

Object.defineProperty(exports, '__esModule', {
  value: true
});
exports["default"] = getProjectNamesMissingWarning;

function _chalk() {
  var data = _interopRequireDefault(require('chalk'));

  _chalk = function _chalk() {
    return data;
  };

  return data;
}

var _getProjectDisplayName = _interopRequireDefault(require('./getProjectDisplayName'));

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : {
    "default": obj
  };
}
/**
 * Copyright (c) Facebook, Inc. and its affiliates. All Rights Reserved.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */


function getProjectNamesMissingWarning(projectConfigs) {
  var numberOfProjectsWithoutAName = projectConfigs.filter(function (config) {
    return !(0, _getProjectDisplayName["default"])(config);
  }).length;

  if (numberOfProjectsWithoutAName === 0) {
    return undefined;
  }

  return _chalk()["default"].yellow("You provided values for --selectProjects but ".concat(numberOfProjectsWithoutAName === 1 ? 'a project does not have a name' : "".concat(numberOfProjectsWithoutAName, " projects do not have a name"), ".\n") + 'Set displayName in the config of all projects in order to disable this warning.\n');
}